"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { TimeEntryForm } from "@/components/time-entry/time-entry-form"
import { TimeDisplay } from "@/components/time-entry/time-display"
import { EntryHistoryList } from "@/components/time-entry/entry-history-list"
import { TimeStats } from "@/components/time-entry/time-stats"
import { useTimeEntries } from "@/hooks/use-time-entries"
import { useAuth } from "@/components/providers/auth-provider"
import { TimeEntryType } from "@/types/time-entry"

export function TimeEntryPanel() {
  const { user } = useAuth()
  const { 
    entries, 
    isLoading, 
    activeEntry,
    todaySummary,
    addEntry,
    refreshEntries
  } = useTimeEntries()

  // Actualizar entradas al cargar y cuando cambie el usuario
  useEffect(() => {
    if (user) {
      refreshEntries()
    }
  }, [user, refreshEntries])

  // Determinar si ciertos botones deben estar deshabilitados
  const hasActiveWorkday = entries.some(entry => entry.type === "entrada") && !entries.some(entry => entry.type === "salida")

  const handleEntrySubmit = async (type: TimeEntryType, notes?: string) => {
    if (!user) return
    await addEntry(type, notes)
  }

  return (
    <div className="space-y-8">
      <Card>
        <CardHeader>
          <CardTitle>Registro de Horario</CardTitle>
        </CardHeader>
        <CardContent>
          <TimeEntryForm 
            onSubmit={handleEntrySubmit} 
            isLoading={isLoading}
            hasActiveWorkday={hasActiveWorkday}
          />
          
          {activeEntry && (
            <div className="mt-6">
              <TimeDisplay 
                startTime={activeEntry.timestamp} 
                label={`Tiempo desde ${activeEntry.type === "entrada" ? "entrada" : "última pausa"}:`} 
              />
            </div>
          )}
        </CardContent>
      </Card>

      <Tabs defaultValue="history" className="w-full">
        <TabsList className="grid grid-cols-2">
          <TabsTrigger value="history">Historial de Hoy</TabsTrigger>
          <TabsTrigger value="stats">Estadísticas</TabsTrigger>
        </TabsList>
        <TabsContent value="history" className="mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Registros de Hoy</CardTitle>
            </CardHeader>
            <CardContent>
              <EntryHistoryList entries={entries} />
            </CardContent>
          </Card>
        </TabsContent>
        <TabsContent value="stats" className="mt-4">
          <Card>
            <CardHeader>
              <CardTitle>Estadísticas</CardTitle>
            </CardHeader>
            <CardContent>
              <TimeStats summary={todaySummary} />
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  )
}

// Generated by Copilot
